apiVersion: apps/v1
kind: ReplicaSet
metadata:
  creationTimestamp: "2020-05-23T10:08:33Z"
  generation: 4
  labels:
    app: myapp
    type: front-end
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
          f:type: {}
      f:spec:
        f:replicas: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:type: {}
            f:name: {}
          f:spec:
            f:containers:
              k:{"name":"nginx-container"}:
                .: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl
    operation: Update
    time: "2020-05-23T10:10:25Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:availableReplicas: {}
        f:fullyLabeledReplicas: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2020-05-23T10:12:05Z"
  name: myapp-rc
  namespace: default
  resourceVersion: "20403"
  selfLink: /apis/apps/v1/namespaces/default/replicasets/myapp-rc
  uid: 89c6dff9-5c7b-435d-912b-a72f33b1c793
spec:
  replicas: 10
  selector:
    matchLabels:
      type: front-end
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: myapp
        type: front-end
      name: myapp-pod
    spec:
      containers:
      - image: nginx
        imagePullPolicy: Always
        name: nginx-container
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 10
  fullyLabeledReplicas: 10
  observedGeneration: 4
  readyReplicas: 10
  replicas: 10
